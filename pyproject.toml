[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pysetl"
description = "A PySpark ETL Framework"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
  {name = "Jhosse Paul Marquez Ruiz", email = "jpaul.marquez.ruiz@gmail.com"}
]
keywords = ["spark", "aws", "etl"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Developers",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
urls = { Home = "https://github.com/JhossePaul/pysetl", Source = "https://github.com/JhossePaul/pysetl" }

requires-python = ">=3.10,<3.13"
dependencies = [
    "typedspark>=1.5.3,<2.0.0",
    "pyspark[sql]>=3.4,<4.0.0",
    "pyarrow>=15.0.0,<16.0.0",
    "numpy>=1.26,<2.0.0",
    "pydantic>=2.4.2,<3.0.0",
    "typing-extensions>=4.13.0,<5.0.0"
]
dynamic = ["version"]

[project.optional-dependencies]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
    "mkdocs-autorefs",
    "mkdocs-section-index",
    "mkdocs-literate-nav",
    "mkdocs-git-revision-date-localized-plugin",
    "mkdocs-git-authors-plugin",
    "mkdocs-minify-plugin",
    "mkdocs-awesome-pages-plugin",
    "mkdocs-glightbox",
    "mkdocs-include-markdown-plugin",
    "pymdown-extensions",
    "mkdocs-mermaid2-plugin"
]
fancy-readme = ["hatch-fancy-pypi-readme"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.envs.default]
installer = "uv"
dependencies = [
    "ruff>=0.4.4,<1.0.0",
    "mypy>=1.6.1,<2.0.0",
    "coverage>=7.3.2,<8.0.0",
    "pytest>=8.3.5,<9.0.0",
    "pre-commit>=4.2.0,<5.0.0",
    "coverage-conditional-plugin>=0.9.0,<1.0.0"
]

[tool.hatch.envs.test]
dependencies = [
    "ruff>=0.4.4,<1.0.0",
    "mypy>=1.6.1,<2.0.0",
    "coverage>=7.3.2,<8.0.0",
    "pytest>=8.3.5,<9.0.0",
    "pre-commit>=4.2.0,<5.0.0",
    "coverage-conditional-plugin>=0.9.0,<1.0.0",
    "pyspark[sql]>=3.4,<4.0.0"
]

[tool.hatch.envs.test.scripts]
lint = "ruff check src/pysetl"
format = "ruff format src/pysetl"
type = "mypy src/pysetl"
test = "coverage erase && coverage run -m pytest && coverage combine && coverage report -m && coverage lcov"
all = "hatch run test:lint && hatch run test:type && hatch run test:test"

[[tool.hatch.envs.test.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.hatch.envs.test.overrides]
matrix.python.env-vars = [
  { key = "COVERAGE_FILE", value = ".coverage.py310", if = ["3.10"] },
  { key = "COVERAGE_FILE", value = ".coverage.py311", if = ["3.11"] },
  { key = "COVERAGE_FILE", value = ".coverage.py312", if = ["3.12"] }
]

[tool.hatch.envs.docs]
dependencies = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
    "mkdocs-autorefs",
    "mkdocs-section-index",
    "mkdocs-literate-nav",
    "mkdocs-git-revision-date-localized-plugin",
    "mkdocs-git-authors-plugin",
    "mkdocs-minify-plugin",
    "mkdocs-awesome-pages-plugin",
    "mkdocs-glightbox",
    "mkdocs-include-markdown-plugin",
    "pymdown-extensions",
    "mkdocs-mermaid2-plugin"
]
[tool.hatch.envs.docs.scripts]
docs = "mkdocs build"

[tool.hatch.envs.security]
dependencies = [
    "bandit>=1.7.0,<2.0.0",
    "safety>=3.0.0,<4.0.0",
    "pip-audit>=2.6.1,<3.0.0"
]
[tool.hatch.envs.security.scripts]
bandit = "bandit -r src/pysetl"
safety = "safety check"
audit = "pip-audit"
all = "hatch run security:bandit && hatch run security:safety && hatch run security:audit"

[tool.hatch.build.targets.sdist]
include = ["src/**", "README.md", "LICENSE"]

[tool.hatch.build.targets.wheel]
include = ["src/**", "README.md", "LICENSE"]

[tool.coverage.run]
concurrency=["multiprocessing"]
source=["src"]
parallel=true
branch=true
plugins = ["coverage_conditional_plugin"]
omit=[
    "src/pysetl/utils/mixins/can_*.py"
]

[tool.coverage.coverage_conditional_plugin.rules]
py-gt-310 = "sys_version_info > (3, 10)"

[tool.coverage.report]
skip_covered=true
skip_empty=true
show_missing=true
fail_under=100

[tool.coverage.lcov]
output="lcov.info"

[tool.pytest.ini_options]
markers = [
    "spark: needs a SparkSession",
]
